apiVersion: 1.0.0
metadata:
  generateName: postit-app-

projects:

  - source:
      type: git
      location: 'https://github.com/nmalvankar/quarkus-reactjs-postit-app'
    name: postit-app


components:

  - alias: quarkus-backend-dev
    type: dockerimage
    image: registry.redhat.io/codeready-workspaces/plugin-java11-rhel8:2.4
    memoryLimit: 5Gi
    command: ['sleep']
    args: ['infinity']
    mountSources: true
    env:
      - name: MAVEN_OPTS
        value: '-Dmaven.repo.local=/.m2/repository'
      - name: username
        value: 'user'
      - name: password
        value: 'password'
      - name: admin_password
        value: 'password'
      - name: uri
        value: 'mongodb://localhost'
    endpoints:
      - name: 'quarkus-dev'
        port: 8080
    volumes:
      - name: m2
        containerPath: /.m2

  - mountSources: true
    memoryLimit: 64M
    type: dockerimage
    image: quay.io/sunix/postit-app-dev-data
    alias: data
    volumes:
      - name: m2
        containerPath: /work/volumes/.m2

  - alias: node-frontend-dev
    mountSources: true
    image: 'quay.io/eclipse/che-nodejs8-centos:7.2.0'
    memoryLimit: 768Mi
    type: dockerimage
    endpoints:
      - name: '3000-tcp'
        port: 3000
    env:
      - name: FRONTEND_PORT
        value: '3000'

  - alias: mongo
    type: dockerimage
    image: centos/mongodb-34-centos7
    memoryLimit: 512Mi
    env:
     - name: MONGODB_USER
       value: user
     - name: MONGODB_PASSWORD
       value: password
     - name: MONGODB_DATABASE
       value: sampledb
     - name: MONGODB_ADMIN_PASSWORD
       value: password

  - id: redhat/quarkus-java11/latest
    type: chePlugin

  - id: redhat/vscode-openshift-connector/latest
    type: chePlugin
    alias: vscode-openshift


  - alias: git
    type: dockerimage
    image: sunix/git-devtools
    mountSources: true
    memoryLimit: 64M
    args: ['sleep', 'infinity']

commands:

  - name: start DEVMODE quarkus-backend
    actions:
      - type: exec
        command: pkill java; mvn compile quarkus:dev
        component: quarkus-backend-dev
        workdir: /projects/postit-app/quarkus-backend

  - name: connect java debugger quarkus-backend
    actions:
      - type: vscode-launch
        referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "java",
              "name": "Debug (Attach) - Remote",
              "request": "attach",
              "hostName": "localhost",
              "port": 5005
            }]
          }

  - name: start DEVMODE node-frontend
    actions:
      - type: exec
        command: npm run devmode
        component: node-frontend-dev
        workdir: /projects/postit-app/node-frontend/

  - name: start PROD node-frontend
    actions:
      - type: exec
        command: npm start
        component: node-frontend-dev
        workdir: /projects/postit-app/node-frontend/

  - name: oc - deploy app (quarkus JVM) from github
    actions:
      - type: exec
        command: |-
                  # mongodb
                  oc new-app -e MONGODB_USER=user -e MONGODB_PASSWORD=password -e MONGODB_DATABASE=sampledb -e MONGODB_ADMIN_PASSWORD=password centos/mongodb-36-centos7 --name=mongo
                  # s2i quarkus app from source
                  oc new-app java~https://github.com/nmalvankar/quarkus-reactjs-postit-app --name=quarkus-backend --context-dir=quarkus-backend -e uri=mongodb://mongo -e username=user -e password=password --env=JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0"
                  oc expose svc/quarkus-backend
                  # s2i node frontend from source
                  oc new-app nodejs~https://github.com/nmalvankar/quarkus-reactjs-postit-app --context-dir=node-frontend --name=node-frontend -e PORT=8080 -e COMPONENT_QUARKUS_BACKEND_HOST=quarkus-backend
                  oc expose svc/node-frontend
                  oc logs -f bc/quarkus-backend
                  oc logs -f bc/node-frontend
                  echo node-frontend url http://$(oc get route node-frontend --template='{{ .spec.host }}')
        component: vscode-openshift
        workdir: /projects/postit-app/node-frontend/

  - name: oc - redeploy quarkus-backend (from local sources)
    actions:
      - type: exec
        command: |-
                  oc start-build quarkus-backend --from-dir=.
                  oc logs -f bc/quarkus-backend
        component: vscode-openshift
        workdir: /projects/postit-app/

  - name: oc - redeploy node-frontend (from local sources)
    actions:
      - type: exec
        command: |-
                  oc start-build node-frontend --from-dir=.
                  oc logs -f bc/node-frontend

        component: vscode-openshift
        workdir: /projects/postit-app/

  - name: oc - scale node-frontend
    actions:
      - type: exec
        command: |-
                  echo "Scale node-frontend. Enter the number of desired replicas:";
                  read replicas;
                  oc scale dc/node-frontend --replicas=${replicas}
        component: vscode-openshift
        workdir: /projects/postit-app/

  - name: oc - scale quarkus-backend
    actions:
      - type: exec
        command: |-
                  echo "Scale quarkus-frontend. Enter the number of desired replicas:";
                  read replicas;
                  oc scale dc/quarkus-backend --replicas=${replicas}
        component: vscode-openshift
        workdir: /projects/postit-app/

  - name: oc - get node-frontend URL
    actions:
      - type: exec
        command: |-
                  echo node-frontend url http://$(oc get route node-frontend --template='{{ .spec.host }}')
        component: vscode-openshift
        workdir: /projects/postit-app/node-frontend/

  - name: oc login
    actions:
      - type: exec
        command: |-
                  rm oc; curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz -s | tar zxv && ./oc login --server=${KUBERNETES_SERVICE_HOST}:443
        component: vscode-openshift
        workdir: /tmp
